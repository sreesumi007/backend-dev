openapi: 3.0.1
info:
  version: "0.1.0"
  title: "MathGrass"
  description: "This is the OpenAPI specification for MathGrass"
  contact:
    name: "Andreas Domanowski"
    email: "andreas.domanowski@tu-dresden.de"
  license:
    name: "MIT"
    url: "https://github.com/MathGrass/mathgrass-api"

paths:
  /graph:
    post:
      description: Create a new graph
      operationId: createGraph
      requestBody:
        description: Graph object that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphDTO'
        required: true
      responses:
        200:
          description: successful operation
          content:
            '*/*':
              schema:
                type: integer
                format: int64
      x-codegen-request-body-name: graph
  /graph/{graphId}:
    get:
      description: Get a graph by id
      operationId: getGraphById
      parameters:
      - name: graphId
        in: path
        description: Graph id
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphDTO'
    put:
      description: Update a graph
      operationId: updateGraph
      parameters:
      - name: graphId
        in: path
        description: ID of graph
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: Graph object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphDTO'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-codegen-request-body-name: graph
  /task:
    get:
      description: Get the IDs of all tasks
      operationId: getIdsOfAllTasks
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskIdLabelTupleDTO'
    post:
      description: Creates a task
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
        required: true
      responses:
        200:
          description: successful operation
          content:
            '*/*':
              schema:
                type: integer
                format: int64
      x-codegen-request-body-name: task
  /task/{taskId}:
    get:
      description: Returns a task
      operationId: getTaskById
      parameters:
      - name: taskId
        in: path
        description: ID of task
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDTO'
    put:
      description: Updates a task
      operationId: updateTask
      parameters:
      - name: taskId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: ID of task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskDTO'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-codegen-request-body-name: task
  /task/{taskId}/evaluateAnswer:
    post:
      description: Submit an answer to a task and expect a boolean response
      operationId: evaluateAnswer
      parameters:
        - name: taskId
          in: path
          description: ID of task
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Submitted answer
        content:
          application/json:
            schema:
              type: object
              properties:
                answer:
                  type: string
              required:
                - answer
        required: true
      responses:
        200:
          description: successful operation
          content:
            'application/json':
              schema:
                type: object
                properties:
                  isAssessmentCorrect:
                    type: boolean
                required:
                  - isAssessmentCorrect
  /task/{taskId}/addHint:
    post:
      description: Adds a hint to a task
      operationId: addTaskHint
      parameters:
      - name: taskId
        in: path
        description: ID of task
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        description: hint item
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HintDTO'
        required: true
      responses:
        200:
          description: successful operation
          content: {}
      x-codegen-request-body-name: hint
  /task/{taskId}/hint/{hintLevel}:
    get:
      description: Get hint at hintlevel for task
      operationId: getHintForTask
      parameters:
      - name: taskId
        in: path
        description: ID of task
        required: true
        schema:
          type: integer
          format: int64
      - name: hintLevel
        in: path
        description: level of the hint
        required: true
        schema:
          type: integer
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HintDTO'
  /taskCollection:
    get:
      description: Get all task collection
      operationId: getTaskCollections
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskCollectionDTO'
    post:
      description: Creates a task collection
      operationId: createTaskCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCollectionDTO'
        required: true
      responses:
        200:
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskCollectionDTO'
      x-codegen-request-body-name: taskCollection
  /taskCollection/{taskCollectionId}:
    get:
      description: Returns a task collection
      operationId: getTaskCollectionById
      parameters:
      - name: taskCollectionId
        in: path
        description: ID of task collection
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskCollectionDTO'

  /label/{labelId}:
    get:
      description: Returns a label
      operationId: getLabelById
      parameters:
      - name: labelId
        in: path
        description: ID of label
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LabelDTO'
  /label:
    get:
      description: Get all labels
      operationId: getLabels
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LabelDTO'
    post:
      description: Creates a label
      operationId: createLabel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelDTO'
        required: true
      responses:
        200:
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LabelDTO'
      x-codegen-request-body-name: label

components:
  schemas:
    GraphDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        labels:
          type: array
          items:
            $ref: '#/components/schemas/LabelDTO'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/EdgeDTO'
        vertices:
          type: array
          items:
              $ref: '#/components/schemas/VertexDTO'
      required:
        - id
        - edges
        - vertices
    VertexDTO:
      title: Vertex
      type: object
      properties:
        id:
          type: integer
          format: int64
        # Relative coordinate system
        # x and y are relative to editor width and height (percentage)
        x:
          maximum: 99
          minimum: 0
          type: integer
          format: int32
        y:
          maximum: 99
          minimum: 0
          type: integer
          format: int32
        label:
          type: string
      required:
        - x
        - y
        - id
    SrkDTO:
      title: Vertex
      type: object
      properties:
        id:
          type: integer
          format: int64
        # Relative coordinate system
        # x and y are relative to editor width and height (percentage)
        x:
          maximum: 99
          minimum: 0
          type: integer
          format: int32
        y:
          maximum: 99
          minimum: 0
          type: integer
          format: int32
        label:
          type: string
      required:
        - x
        - y
        - id
    EdgeDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstVertex:
          $ref: '#/components/schemas/VertexDTO'
        secondVertex:
          $ref: '#/components/schemas/VertexDTO'
        label:
          type: string
      required:
        - firstVertex
        - secondVertex
    LabelDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
      required:
        - id
        - label
    QuestionDTO:
      type: object
      properties:
        question:
          type: string
      required:
        - question
    TaskSolverDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
        executionDescriptor:
          type: string
    TaskDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        graph:
          $ref: '#/components/schemas/GraphDTO'
        question:
          $ref: '#/components/schemas/QuestionDTO'
      required:
        - question
        - id
        - graph
    TaskIdLabelTupleDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
      required:
        - id
        - label
    HintDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
        content:
          type: string
      required:
        - id
        - content
    TaskResultDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        task:
          type: integer
          format: int64
        answer:
          type: string
        submissionDate:
          type: string
        evaluationDate:
          type: string
        answerTrue:
          type: boolean
    FeedbackDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
    TaskCollectionDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
        tasks:
          type: array
          items:
            type: integer
            format: int64
